{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/repos/calculator/src/Calc.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { create, all } from \"mathjs\";\nimport Wrapper from \"./components/calc/Wrapper\";\nimport Screen from \"./components/calc/Screen\";\nimport ButtonBox from \"./components/calc/ButtonBox\";\nimport Button from \"./components/calc/Button\";\nimport \"./Calc.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst btnValues = [[\"C\", \"+-\", \"%\", \"/\"], [7, 8, 9, \"x\"], [4, 5, 6, \"-\"], [1, 2, 3, \"+\"], [0, \".\", \"=\"]];\nconst Calc = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const math = create(all);\n  const handleButtonClick = btn => {\n    if (btn === \"C\") {\n      setInput(\"\");\n      setResult(0);\n      return;\n    } else if (btn === \"=\") {\n      try {\n        setResult(math.evaluate(input).toString());\n      } catch (e) {\n        setResult(\"Error\");\n      }\n    } else if (btn === \"+-\") {\n      if (input.charAt(0) === \"-\") {\n        setInput(input.slice(1));\n      } else {\n        setInput(\"-\" + input);\n      }\n    } else if (btn === \"%\") {\n      setInput(input + \"%\");\n    } else if (btn === \"x\") {\n      setInput(input + \"*\");\n    } else if (btn === \".\") {\n      setInput(input + \".\");\n    } else if (btn === \"+\") {\n      setInput(input + \"+\");\n    } else if (btn === \"-\") {\n      setInput(input + \"-\");\n    } else if (btn === \"/\") {\n      setInput(input + \"/\");\n    } else {\n      setInput(input + btn);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Screen, {\n        value: result || input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonBox, {\n        children: btnValues.flat().map((btn, i) => /*#__PURE__*/_jsxDEV(Button, {\n          className: btn === \"=\" ? \"equals\" : btn === \"C\" ? \"C\" : \"\",\n          value: btn,\n          onClick: () => handleButtonClick(btn)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Calc, \"YzqDyJ2o9kOXO561mkhTut2HHmk=\");\n_c = Calc;\nexport default Calc;\nvar _c;\n$RefreshReg$(_c, \"Calc\");","map":{"version":3,"names":["React","useState","create","all","Wrapper","Screen","ButtonBox","Button","jsxDEV","_jsxDEV","btnValues","Calc","_s","input","setInput","result","setResult","math","handleButtonClick","btn","evaluate","toString","e","charAt","slice","children","value","fileName","_jsxFileName","lineNumber","columnNumber","flat","map","i","className","onClick","_c","$RefreshReg$"],"sources":["/Users/thomas/repos/calculator/src/Calc.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { create, all } from \"mathjs\";\nimport Wrapper from \"./components/calc/Wrapper\";\nimport Screen from \"./components/calc/Screen\";\nimport ButtonBox from \"./components/calc/ButtonBox\";\nimport Button from \"./components/calc/Button\";\nimport \"./Calc.css\";\n\nconst btnValues = [\n  [\"C\", \"+-\",\"%\",\"/\"], \n  [7, 8, 9, \"x\"],\n  [4, 5, 6, \"-\"],\n  [1, 2, 3, \"+\"],\n  [0, \".\", \"=\"]\n];\n\nconst Calc = () => {\n\n  const [input, setInput] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const math = create(all)\n\n\n  const handleButtonClick = (btn) => {\n      if(btn === \"C\"){\n        setInput(\"\");\n        setResult(0);\n        return;\n      }\n      else if(btn === \"=\"){\n\n        try{\n          setResult(math.evaluate(input).toString());\n        }\n        catch(e){\n          setResult(\"Error\");\n        }\n      }\n      else if(btn === \"+-\"){\n        if(input.charAt(0) === \"-\"){\n          setInput(input.slice(1));\n        }\n        else{\n          setInput(\"-\" + input);\n        }\n      }\n      else if(btn === \"%\"){\n        setInput(input + \"%\");\n      }\n      else if(btn === \"x\"){\n        setInput(input + \"*\");\n      }\n      else if(btn === \".\"){\n        setInput(input + \".\");\n      }\n      else if(btn === \"+\"){\n        setInput(input + \"+\");\n      }\n      else if(btn === \"-\"){\n        setInput(input + \"-\");\n      }\n      else if(btn === \"/\"){\n        setInput(input + \"/\");\n      }\n      else{\n        setInput(input + btn);\n      }\n  }\n\n\n\n\n\n  return (\n    <div>\n      <Wrapper>\n        <Screen value={result || input} />\n        <ButtonBox>\n          {btnValues.flat().map((btn, i) => (\n            <Button\n              key = {i}\n              className = {btn === \"=\" ? \"equals\":\n                          btn === \"C\" ? \"C\" : \"\"\n                          }\n              value = {btn}\n              onClick={() => handleButtonClick(btn)}\n            />\n          ))}\n        </ButtonBox>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default Calc;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,GAAG,QAAQ,QAAQ;AACpC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,SAAS,GAAG,CAChB,CAAC,GAAG,EAAE,IAAI,EAAC,GAAG,EAAC,GAAG,CAAC,EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EACd,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EACd,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EACd,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CACd;AAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMgB,IAAI,GAAGf,MAAM,CAACC,GAAG,CAAC;EAGxB,MAAMe,iBAAiB,GAAIC,GAAG,IAAK;IAC/B,IAAGA,GAAG,KAAK,GAAG,EAAC;MACbL,QAAQ,CAAC,EAAE,CAAC;MACZE,SAAS,CAAC,CAAC,CAAC;MACZ;IACF,CAAC,MACI,IAAGG,GAAG,KAAK,GAAG,EAAC;MAElB,IAAG;QACDH,SAAS,CAACC,IAAI,CAACG,QAAQ,CAACP,KAAK,CAAC,CAACQ,QAAQ,CAAC,CAAC,CAAC;MAC5C,CAAC,CACD,OAAMC,CAAC,EAAC;QACNN,SAAS,CAAC,OAAO,CAAC;MACpB;IACF,CAAC,MACI,IAAGG,GAAG,KAAK,IAAI,EAAC;MACnB,IAAGN,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAC;QACzBT,QAAQ,CAACD,KAAK,CAACW,KAAK,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,MACG;QACFV,QAAQ,CAAC,GAAG,GAAGD,KAAK,CAAC;MACvB;IACF,CAAC,MACI,IAAGM,GAAG,KAAK,GAAG,EAAC;MAClBL,QAAQ,CAACD,KAAK,GAAG,GAAG,CAAC;IACvB,CAAC,MACI,IAAGM,GAAG,KAAK,GAAG,EAAC;MAClBL,QAAQ,CAACD,KAAK,GAAG,GAAG,CAAC;IACvB,CAAC,MACI,IAAGM,GAAG,KAAK,GAAG,EAAC;MAClBL,QAAQ,CAACD,KAAK,GAAG,GAAG,CAAC;IACvB,CAAC,MACI,IAAGM,GAAG,KAAK,GAAG,EAAC;MAClBL,QAAQ,CAACD,KAAK,GAAG,GAAG,CAAC;IACvB,CAAC,MACI,IAAGM,GAAG,KAAK,GAAG,EAAC;MAClBL,QAAQ,CAACD,KAAK,GAAG,GAAG,CAAC;IACvB,CAAC,MACI,IAAGM,GAAG,KAAK,GAAG,EAAC;MAClBL,QAAQ,CAACD,KAAK,GAAG,GAAG,CAAC;IACvB,CAAC,MACG;MACFC,QAAQ,CAACD,KAAK,GAAGM,GAAG,CAAC;IACvB;EACJ,CAAC;EAMD,oBACEV,OAAA;IAAAgB,QAAA,eACEhB,OAAA,CAACL,OAAO;MAAAqB,QAAA,gBACNhB,OAAA,CAACJ,MAAM;QAACqB,KAAK,EAAEX,MAAM,IAAIF;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClCrB,OAAA,CAACH,SAAS;QAAAmB,QAAA,EACPf,SAAS,CAACqB,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACb,GAAG,EAAEc,CAAC,kBAC3BxB,OAAA,CAACF,MAAM;UAEL2B,SAAS,EAAIf,GAAG,KAAK,GAAG,GAAG,QAAQ,GACvBA,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,EACnB;UACbO,KAAK,EAAIP,GAAI;UACbgB,OAAO,EAAEA,CAAA,KAAMjB,iBAAiB,CAACC,GAAG;QAAE,GAL/Bc,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMT,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5EID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA8EV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}